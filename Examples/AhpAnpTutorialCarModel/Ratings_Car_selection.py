# from AhpAnpLib import *
from AhpAnpLib import inputs_AHPLib as input
from AhpAnpLib import structs_AHPLib as str
from AhpAnpLib import calcs_AHPLib as calc
from AhpAnpLib import ratings_AHPLib as rate

#create the model
carModel=str.Model("AHP Car Selection Ratings Model")

#create goal cluster
cluster0=str.Cluster("1Goal",0)
#create goal node
goal_node=str.Node("GoalNode",0)
#add the goal to the goal cluster
cluster0.addNode2Cluster(goal_node) 
#add the goal cluster to the model 
carModel.addCluster2Model(cluster0)

#create criteria nodes
cost=str.Node("1Cost",1)
reliability=str.Node("2Reliability",2)
performance=str.Node("3Performance",3)
comf=str.Node("4Comfort and Style",4)
#criteria cluster
cluster1=str.Cluster("2Criteria",1)
#add the nodes to the criteria cluster
cluster1.addMultipleNodes2Cluster(cost,reliability,performance,comf)
#add the cluster to the model
carModel.addCluster2Model(cluster1)

#Cost subcriteria cluster and nodes
cluster2=str.Cluster("CostSubCriteria",2)
subCost1=str.Node("1.1Initial Cost",5)
subCost2=str.Node("1.2Monthly Payment",6)
subCost3=str.Node("1.3Resale Value",7)
cluster2.addMultipleNodes2Cluster(subCost1,subCost2,subCost3)
carModel.addCluster2Model(cluster2)

#set up node connections from Goal Node to all the nodes of the 2Criteria cluster
carModel.addNodeConnectionFromNodeToAllNodesOfCluster("GoalNode","2Criteria")
#connect 1Cost to all of its Subcriteria
carModel.addNodeConnectionFromNodeToAllNodesOfCluster("1Cost","CostSubCriteria")

##start ratings setup
#set model type to ratings
carModel.setModelTypeRatings()

# Select bottom level criteria to use in the ratings model
carModel.rateModel.addCriteriaByName("1.1Initial Cost","1.2Monthly Payment","1.3Resale Value","2Reliability","3Performance","4Comfort and Style")



# Add the alternatives to be used in the ratings model and add them or use existing nodes
carModel.rateModel.addAlternativesByName("1Toyota Highlander","2Honda Odyssey","3Subaru Outback","4Acura TL","5Toyota Camry","6Honda Civic","7Fiat","8MiniCooper","9Kia Rio")



#Read/Create rating scales to use for the evaluation of the alternatives with respect to the selected criteria
#There are three ways, 1) we can create a scale with values
#2) we can create a scale defining categories only without values and then do pairwise comparisons later
#3) read existing sd model scale from rcp files

#(1)this is how we add a scale that we already know its values
priceScale=rate.RatScale("PriceScale")
priceScale.defineScaleByValue(None,False,
["More than 30 K", 51],
["Between 25K and 30K",100], 
["Between 20K and 25K",39],
["Less than 20K",9]
)
GoodMedPoor=rate.RatScale("GoodMediumPoor_Scale")
GoodMedPoor.defineScaleByValue(None,False,
["Good", 1],
["Med",0.346681], 
["Poor",0.080125]
)

#(2)this is how we add a scale when we want to calculate its values later on
HiMedLoScale=rate.RatScale("HiMedLo_Scale")
HiMedLoScale.defineScaleByValue(None,False,"Hi","Med","Lo")




#(3)this is how we read scale from RCP file -- generated by Super Decisions (legacy software tool for AHP/ANP)
#rcp file need to be placed under the same folder
excellent2poor=input.readRatScaleRCPfile("Excellent2Poor_ScaleRCP","RatingsScale_Excellent2Poor.rcp")

#add scales to model one by one
carModel.rateModel.addScaleByVar(excellent2poor)
carModel.rateModel.addScaleByVar(priceScale)
carModel.rateModel.addScaleByVar(HiMedLoScale)
carModel.rateModel.addScaleByVar(GoodMedPoor)

carModel.rateModel.assignScale2CriterionByName("1.1Initial Cost","PriceScale")
#we can assign the scale to multiple criteria if it is appropriate
#later we will make judgment to calculate the priorities of the categories with respect to each criterion separtely 
carModel.rateModel.assignScale2CriterionByName("1.2Monthly Payment","HiMedLo_Scale")
carModel.rateModel.assignScale2CriterionByName("1.3Resale Value","HiMedLo_Scale")

carModel.rateModel.assignScale2CriterionByName("2Reliability","Excellent2Poor_ScaleRCP")
carModel.rateModel.assignScale2CriterionByName("3Performance","GoodMediumPoor_Scale")
carModel.rateModel.assignScale2CriterionByName("4Comfort and Style","Excellent2Poor_ScaleRCP")

# Print out model structure 
carModel.printStruct()

# Excel questionnaire to get criteria of the AHP model
input.export4ExcelQuestFull(carModel,"Ratings_Car_selection_Criteria_Excel_empty.xlsx",True)

#We import the filedin questionnaire of pairwise compairson matrices of the ratings criteria
criteriaJudgmentFile="Ratings_Car_selection_Criteria_Excel_filledIn.xlsx"
criteriaPrioritiesResults="Ratings_Car_selection_Criteria_priorities.xlsx"
calc.calcAHPMatricesSave2File(carModel,criteriaJudgmentFile,criteriaPrioritiesResults,True,False,True)

#Then we can export the ratings table
ratingsTableEmpty="Ratings_Car_selection_Ratings_Table_empty.xlsx"
input.export4ExcelRatingsSetup(carModel, ratingsTableEmpty,True)

#Then we can use the filledin ratings table to calculate and export ratings results
ratingsTableFilledin="Ratings_Car_selection_Ratings_Table_filledin.xlsx"
ratingsTableResults="Ratings_Car_selection_Ratings_results.xlsx"
input.calcExcelRatings(carModel, ratingsTableFilledin, ratingsTableResults,False)